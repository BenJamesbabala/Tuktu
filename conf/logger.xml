<configuration>
   <appender name="ALL_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
      <file>${application.home}/logs/application.log</file>
      <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
         <!-- rollover daily -->
         <fileNamePattern>application-%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
		 <!-- keep 30 days' worth of history -->
         <maxHistory>30</maxHistory>
         <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
            <!-- or whenever the file size reaches 100MB -->
            <maxFileSize>100MB</maxFileSize>
         </timeBasedFileNamingAndTriggeringPolicy>
      </rollingPolicy>
      <encoder>
         <pattern>%date ---- [%level] -- %X{akkaSource} %n%message%n%xException%n</pattern>
         <immediateFlush>false</immediateFlush>
      </encoder>
   </appender>
   
   <appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
      <file>${application.home}/logs/application-info.log</file>
      <filter class="ch.qos.logback.classic.filter.LevelFilter">
         <level>INFO</level>
         <onMatch>ACCEPT</onMatch>
         <onMismatch>DENY</onMismatch>
      </filter>
      <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
         <!-- rollover daily -->
         <fileNamePattern>application-info-%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
		 <!-- keep 30 days' worth of history -->
         <maxHistory>30</maxHistory>
         <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
            <!-- or whenever the file size reaches 100MB -->
            <maxFileSize>100MB</maxFileSize>
         </timeBasedFileNamingAndTriggeringPolicy>
      </rollingPolicy>
      <encoder>
         <pattern>%date ---- %X{akkaSource} %n%message%n%xException%n</pattern>
         <immediateFlush>false</immediateFlush>
      </encoder>
   </appender>
   
   <appender name="WARN_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
      <file>${application.home}/logs/application-warn.log</file>
      <filter class="ch.qos.logback.classic.filter.LevelFilter">
         <level>WARN</level>
         <onMatch>ACCEPT</onMatch>
         <onMismatch>DENY</onMismatch>
      </filter>
      <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
         <!-- rollover daily -->
         <fileNamePattern>application-warn-%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
		 <!-- keep 30 days' worth of history -->
         <maxHistory>30</maxHistory>
         <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
            <!-- or whenever the file size reaches 100MB -->
            <maxFileSize>100MB</maxFileSize>
         </timeBasedFileNamingAndTriggeringPolicy>
      </rollingPolicy>
      <encoder>
         <pattern>%date ---- %X{akkaSource} %n%message%n%xException%n</pattern>
         <immediateFlush>false</immediateFlush>
      </encoder>
   </appender>
   
   <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
      <file>${application.home}/logs/application-error.log</file>
      <filter class="ch.qos.logback.classic.filter.LevelFilter">
         <level>ERROR</level>
         <onMatch>ACCEPT</onMatch>
         <onMismatch>DENY</onMismatch>
      </filter>
      <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
         <!-- rollover daily -->
         <fileNamePattern>application-error-%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
		 <!-- keep 30 days' worth of history -->
         <maxHistory>30</maxHistory>
         <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
            <!-- or whenever the file size reaches 100MB -->
            <maxFileSize>100MB</maxFileSize>
         </timeBasedFileNamingAndTriggeringPolicy>
      </rollingPolicy>
      <encoder>
         <pattern>%date ---- %X{akkaSource} %n%message%n%xException%n</pattern>
         <immediateFlush>false</immediateFlush>
      </encoder>
   </appender>
   
   <appender name="ACCESS_FILE" class="ch.qos.logback.core.FileAppender">
      <file>${application.home}/logs/access.log</file>
      <encoder>
         <pattern>%date %message%n</pattern>
         <immediateFlush>false</immediateFlush>
      </encoder>
   </appender>
   
   <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
      <encoder>
         <pattern>%date ---- [%level] -- %X{akkaSource} %n%message%n%xException%n</pattern>
      </encoder>
   </appender>
   
   <root level="ALL">
      <appender-ref ref="ALL_FILE" />
      <appender-ref ref="STDOUT" />
   </root>
   
   <root level="INFO">
      <appender-ref ref="INFO_FILE" />
   </root>
   
   <root level="WARN">
      <appender-ref ref="WARN_FILE" />
   </root>
   
   <root level="ERROR">
      <appender-ref ref="ERROR_FILE" />
   </root>
   
   <!-- additivity=false ensures access log data only goes to the access log -->
   <logger name="access" level="INFO" additivity="false">
      <appender-ref ref="ACCESS_FILE" />
   </logger>
</configuration>

